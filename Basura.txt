header {
    background-color: #4779dd; /* Color de fondo */
    color: white; /* Color del texto */
    padding: 20px; /* Espaciado interno */
    display: flex; /* Para alinear elementos horizontalmente */
    justify-content: space-between; /* Espacio entre logo y navegación */
    align-items: center; /* Alinear verticalmente en el centro */
    font-family: Arial, sans-serif;
}
/* Estilo para la imagen del logo */
header img {
    height: 60px; /* Ajusta la altura del logo */
}
/* Opcional: estilo para los elementos de navegación */
nav ul {
    list-style-type: none; /* Eliminar viñetas */
    padding: 0;
    margin: 0;
}
nav ul li {
    display: inline; /* Mostrar elementos en línea */
    margin: 0 15px; /* Espaciado entre los elementos */
}
nav ul li a {
    color: white; /* Color del texto de los enlaces */
    text-decoration: none; /* Eliminar subrayado */
    font-weight: bold; /* Texto en negrita */
}
body {
    display: grid;
    min-height: 50dvh;
    grid-template-rows:
        auto 1fr auto;
}
.carousel {
    align-items: center;    
    position: center;
    width: 100%;
    max-width: 600px;
    overflow: hidden;
    border-radius: 10px;
    margin-bottom: 10px;
}
.carousel-images img {
    display: none;
    width: 100%;
}

.carousel-images img.active {
    display: block;
}

.prev, .next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
    font-size: 20px;
    border-radius: 5px;
}
.prev {
    left: 10px;
}
.next {
    right: 10px;
}
.prev:hover, .next:hover {
    background-color: rgba(0, 0, 0, 0.8);
}

footer {
    background-color:#4779dd;
    color: white;
    text-align: center;
    padding: 20px;
    position: fixed;
    bottom: 0;
    width: 100%;
}
































































<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editor de Imágenes</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="Style3.css">
    <link rel="icon" href="Panasonic.png">
</head>

<body>
    <header>
        <h1 class="text-center">Editor de Imágenes</h1>
    </header>
    <main>
        <div class="container">
            <div class="button-column">
                <h2>Subir Imágenes</h2>
                <input type="file" id="imageUploader" accept="image/*" multiple onchange="showPreview()"
                    style="display: none;">
                <button class="btn pulse-effect"
                    onclick="document.getElementById('imageUploader').click()">Agregar</button>
                <button class="btn pulse-effect" onclick="clearimages()">Eliminar</button>
                <button class="btn pulse-effect" onclick="saveimages()">Guardar Imágenes</button>
                <button class="btn pulse-effect" onclick="window.location.href='Inicio.html'">Regresar</button>
            </div>
            <div class="preview-container">
                <h3>VISTA PREVIA</h3>
                <div id="previewGrid" class="preview-grid"></div>
            </div>
        </div>
    </main>
    <script>
        function showPreview() {
            const previewGrid = document.getElementById("previewGrid");
            previewGrid.innerHTML = ""; // Limpiar vista previa anterior
            const files = document.getElementById("imageUploader").files;
            Array.from(files).forEach(file => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement("img");
                    img.src = e.target.result;
                    img.className = "preview-image";
                    previewGrid.appendChild(img);
                };
                reader.readAsDataURL(file);
            });
        }
        function saveimages() {
            if (!confirm("¿Quieres agregar estas imágenes al carrusel?")) return;
            const imageUploader = document.getElementById("imageUploader");
            const newImages = []; // Para almacenar las nuevas imágenes            
            Array.from(imageUploader.files).forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imageData = {
                        name: file.name,   // Guardar el nombre del archivo
                        url: e.target.result
                    };
                    newImages.push(imageData);
                    if (index === imageUploader.files.length - 1) {
                        const existingImages = JSON.parse(localStorage.getItem("carouselImages")) || [];
                        const allImages = existingImages.concat(newImages);
                        localStorage.setItem("carouselImages", JSON.stringify(allImages));
                        alert("Imágenes guardadas y agregadas al carrusel con éxito!");
                    }
                };
                reader.readAsDataURL(file);
            });
        }
        function clearimages() {
            localStorage.removeItem("carouselImages");
            alert("Todas las imágenes del carrusel han sido eliminadas.");
            document.getElementById("previewGrid").innerHTML = "";
        }
    </script>
    <footer>
        <p>&copy; 2024 Panasonic Industrial Devices Mexicana, S.A. De C.V. Todos los derechos reservados.</p>
    </footer>
<style>
</style>
</body>
</html>


















































<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Panasonic Login</title>
  <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
  <link rel="script" href="Login.js">
  <link rel="stylesheet" href="Login.css">
  <link rel="icon" href="Panasonic.png">
</head>

<body>
  <div class="screen-1">
    <div id="header"><img src="Panasonic_logo.png" alt="Logo Panasonic"></div>
    <g transform="matrix(0.92 0 0 0.92 318.5 286.5)">
      <circle
        style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
        cx="0" cy="0" r="40"></circle>
    </g>
    <g transform="matrix(0.16 0.1 -0.44 0.69 342.03 248.34)">
      <polygon
        style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
        vector-effect="non-scaling-stroke" points="-50,-50 -50,50 50,50 50,-50 "></polygon>
    </g>
    </svg>
    <div class="email">
      <label for="email">User</label>
      <div class="sec-2">
        <ion-icon name="mail-outline"></ion-icon>
        <input type="email" name="email" placeholder="Username" />
      </div>
    </div>
    <div class="password">
      <label for="password">Password</label>
      <div class="sec-2">
        <ion-icon name="lock-closed-outline"></ion-icon>
        <input class="pas" type="password" name="password" placeholder="········" />
      </div>
    </div>
    <button class="login">Done </button>
  </div>
  <script src="Login.js"></script>
</body>

</html>
//////////////////////////////////////////////////////////////////////

document.head.appendChild(style);

// Crear elementos HTML dinámicamente
const container = document.createElement('div');
container.className = 'login-container';

const title = document.createElement('h2');
title.textContent = 'Login';

const usernameInput = document.createElement('input');
usernameInput.type = 'text';
usernameInput.placeholder = 'Username';
usernameInput.className = 'login-input';
usernameInput.id = 'username';

const passwordInput = document.createElement('input');
passwordInput.type = 'password';
passwordInput.placeholder = 'Password';
passwordInput.className = 'login-input';
passwordInput.id = 'password';

const loginButton = document.createElement('button');
loginButton.textContent = 'Login';
loginButton.className = 'login-button';

const errorMessage = document.createElement('p');
errorMessage.className = 'error-message';
errorMessage.id = 'message';

// Añadir elementos al contenedor
container.appendChild(title);
container.appendChild(usernameInput);
container.appendChild(passwordInput);
container.appendChild(loginButton);
container.appendChild(errorMessage);

// Añadir el contenedor al cuerpo del documento
document.body.appendChild(container);

// Agregar funcionalidad al botón
loginButton.addEventListener('click', () => {
    const username = usernameInput.value;
    const password = passwordInput.value;

    // Datos de ejemplo para autenticación
    const validUsername = 'admin';
    const validPassword = '1234';

    if (username === validUsername && password === validPassword) {
        alert('Login exitoso!');
        // Redirigir o realizar otra acción
        window.location.href = 'Editor.html'; 
    } else {
        errorMessage.textContent = 'Usuario o contraseña incorrectos.';
    }
});
/////////////////////////////////////////////////////////////////////////////////////////
* {
    font-family: "Poppins";
}

body {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    overflow-y: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #dde5f4;
    height: 100vh;
}


div#Header {

    /* Estilo para la imagen del logo */
    header {
        color: white;
        padding: 100px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-family: Arial, sans-serif;
        width: 100px;

    }
}

.screen-1 {
    background: #f1f7fe;
    padding: 2em;
    display: flex;
    flex-direction: column;
    border-radius: 30px;
    box-shadow: 0 0 2em #e6e9f9;
    gap: 2em;
}

.screen-1 .logo {
    margin-top: -3em;
}

.screen-1 .email {
    background: white;
    box-shadow: 0 0 2em #e6e9f9;
    padding: 1em;
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    border-radius: 10px;
    color: #4d4d4d;
    margin-top: -3em;
}

.screen-1 .email input {
    outline: none;
    border: none;


}

.screen-1 .email input::-moz-placeholder {
    color: black;
    font-size: 0.9em;
}

.screen-1 .email input:-ms-input-placeholder {
    color: black;
    font-size: 0.9em;
}

.screen-1 .email input::placeholder {
    color: black;
    font-size: 0.9em;
}

.screen-1 .email ion-icon {
    color: #4d4d4d;
    margin-bottom: -0.2em;
}

.screen-1 .password {
    background: white;
    box-shadow: 0 0 2em #e6e9f9;
    padding: 1em;
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    border-radius: 20px;
    color: #4d4d4d;
}

.screen-1 .password input {
    outline: none;
    border: none;

}

.screen-1 .password input::-moz-placeholder {
    color: black;
    font-size: 0.9em;
}

.screen-1 .password input:-ms-input-placeholder {
    color: black;
    font-size: 0.9em;
}

.screen-1 .password input::placeholder {
    color: black;
    font-size: 0.9em;
}

.screen-1 .password ion-icon {
    color: #4d4d4d;
    margin-bottom: -0.2em;
}

.screen-1 .password .show-hide {
    margin-right: -5em;
}

.screen-1 .login {
    padding: 1em;
    background: #3e4684;
    color: white;
    border: none;
    border-radius: 30px;
    font-weight: 600;
}

.screen-1 .footer {
    display: flex;
    font-size: 0.7em;
    color: #5e5e5e;
    gap: 14em;
    padding-bottom: 10em;
}

.screen-1 .footer span {
    cursor: pointer;
}

button {
    cursor: pointer;
}

  






















































































